#include <stdio.h>
int main()
{
	int n, m, i, j, k;
	printf("Enter the number of Processes: ");
	scanf("%d",&n);
	printf("Enter the number of Resources: ");
	scanf("%d",&m);
	int alloc[n][m];
	int max[n][m];
	int avail[m];
	printf("Enter Allocation Matrix \n");
	for(i=0;i<n;i++)
	{
		printf("For P%d",i+1);
		printf("\n");
		for(j=0;j<m;j++)
		{
			scanf("%d",&alloc[i][j]);
		}
	}
	printf("Enter Max Matrix \n");
	for(i=0;i<n;i++)
	{
		printf("For P%d",i+1);
		printf("\n");
		for(j=0;j<m;j++)
		{
			scanf("%d",&max[i][j]);
		}
	}
	printf("Enter Available Resources");
	printf("\n");
	for(i=0;i<m;i++)
	{
		scanf("%d",&avail[i]);
	}

	int need[n][m];
	for (i = 0; i < n; i++) {
		for (j = 0; j < m; j++)
			need[i][j] = max[i][j] - alloc[i][j];
	}
	
	printf("\n\nNEED MATRIX\n");
	for (i = 0; i < n; i++) { 
        for (j = 0; j < m; j++) { 
            printf("%d\t", need[i][j]); 
        } 
        printf("\n"); 
    }
    
	int f[n], ans[n], ind = 0;
	for (k = 0; k < n; k++) {
		f[k] = 0;
	}
	
	int y = 0;
	for (k = 0; k < n; k++) {
    for (i = 0; i < n; i++) {
        if (f[i] == 0) {
            int flag = 1;
            for (j = 0; j < m; j++) {
                if (need[i][j] > avail[j]) {
                    flag = 0;
                    break; // Exit the loop if any resource is unavailable
                }
            }
            if (flag) {
                ans[ind++] = i;
                for (y = 0; y < m; y++)
                    avail[y] += alloc[i][y];
                f[i] = 1;
            }
        }
    }
}

 // Check if all processes are finished
	int flag = 1;
	
	for(i=0;i<n;i++)
	{
	if(f[i]==0)
	{
		flag=0;
		printf("The following system is not safe");
		break;
	}
	}
	  // Output Safe Sequence
	if(flag==1)
	{
	printf("Following is the SAFE Sequence\n");
	for (i = 0; i < n -1 ; i++)
		printf(" P%d ->", ans[i]+1);
		printf(" P%d", ans[n - 1 ]+1);
	}
	 
}
