#include <stdio.h>

struct Process {
    int pid;
    int at;
    int bt;
    int ct;
    int tat;
    int wt;
};

void findSJF(struct Process proc[], int n) {
    int remt[5];
    int i;
    for (i = 0; i < n; i++) {
        remt[i] = proc[i].bt;
    }
    int currentTime = 0;
    int complete = 0;
    int shortest = 0;
    int minBurst = 9999;
    while (complete < n) {
        minBurst = 9999;
        for (i = 0; i < n; i++) {
            if (proc[i].at <= currentTime && remt[i] < minBurst && remt[i] > 0) {
                minBurst = remt[i];
                shortest = i;
            }
        }
        remt[shortest]--;
        if (remt[shortest] == 0) {
            complete++;
            proc[shortest].ct = currentTime + 1;
            proc[shortest].tat = proc[shortest].ct - proc[shortest].at;
            proc[shortest].wt = proc[shortest].tat - proc[shortest].bt;
        }
        currentTime++;
    }
}

void display(struct Process proc[], int n) {
    int i;
	float ttat=0,twt=0;
    printf("Process\tArrival Time\tBurst Time\tCompletion Time\tTurnAround Time\tWaiting Time\n");
    for (i = 0; i < n; i++) {
        printf("P%d\t\t%d\t\t%d\t\t%d\t\t%d\t\t%d\n", proc[i].pid + 1, proc[i].at, proc[i].bt, proc[i].ct, proc[i].tat, proc[i].wt);
        twt+=proc[i].wt;
        ttat+=proc[i].tat;
    }
    printf("Average Waiting Time = %.2f\n",twt/n);
    printf("Average TurnAround Time = %.2f\n",ttat/n);
}

int main() {
    int n, i;
    printf("Enter the number of processors: ");
    scanf("%d", &n);
    struct Process proc[n];
    printf("Enter Process Details: \n");

    for (i = 0; i < n; i++) {
        proc[i].pid = i;
        printf("For Process P%d:\n", i + 1);
        printf("Arrival Time = ");
        scanf("%d", &proc[i].at);        
        printf("Burst Time = ");
        scanf("%d", &proc[i].bt);
    }
    findSJF(proc, n);
    display(proc, n);
}
