#include <stdio.h>

#define MAX_FRAMES 100

int findLRU(int last_used[], int frames) {
    int min_index = 0;
    int i;
    for (i = 1; i < frames; i++) {
        if (last_used[i] < last_used[min_index]) {
            min_index = i;
        }
    }
    return min_index;
}

int main() {
    int n, frames,i;
    // Ask the user for the number of pages
    printf("Enter the number of pages: ");
    scanf("%d", &n);

    // Define the reference string of pages based on user input
    int rs[n];
    printf("Enter the reference string: ");
    for (i = 0; i < n; i++) {
        scanf("%d", &rs[i]);
    }

    // Ask the user for the number of frames
    printf("Enter the number of frames: ");
    scanf("%d", &frames);

    int pageFaults = 0;
    int pageHits = 0;
    int temp[frames];
    int last_used[frames];
    int current_time = 0;

    // Initialize the frames and last used times
    for (i = 0; i < frames; i++) {
        temp[i] = -1;
        last_used[i] = -1;
    }

    // Print the dynamic header for frames
    printf("Reference string");
    for (i = 0; i < frames; i++) {
        printf("\t  Frame %d", i + 1);
    }
    printf("\n");

    // Simulate the LRU page replacement algorithm
    for (i = 0; i < n; i++) {
        int page = rs[i];
        int found = 0;

        // Check if the page is already in the frames (page hit)
        int j;
        for (j = 0; j < frames; j++) {
            if (temp[j] == page) {
                pageHits++; // Page hit
                found = 1;
                last_used[j] = current_time; // Update last used time
                break;
            }
        }

        // If it's not found, it's a page fault
        if (!found) {
            pageFaults++;
            int lru_index = findLRU(last_used, frames);
            temp[lru_index] = page; // Replace the least recently used page
            last_used[lru_index] = current_time; // Update last used time
        }

        current_time++; // Increment the current time

        // Display the current frames
        printf("\t%d\t\t", page);
        for (j = 0; j < frames; j++) {
            if (temp[j] != -1) {
                printf("   %d\t\t", temp[j]);
            } else {
                printf("   -\t\t");
            }
        }
        printf("\n");
    }

    // Output the total page faults and page hits
    printf("\nTotal Page Faults: %d", pageFaults);   
    printf("\nTotal Page Hits: %d", pageHits);

    return 0;
}
